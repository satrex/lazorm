//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LazormFluxorGenerator {
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    
    public partial class EffectTemplate : EffectTemplateBase {
        
        public virtual string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 6 ""
            this.Write("\n");
            
            #line default
            #line hidden
            
            #line 7 ""
  
//string[] cruds = new string[] {"Create", "Load", "Update", "Delete"};  \
string[] cruds = new string[] {"Create"}; 
string[] actionTypes = new string[] {"", "Success"};


string EntityClass = entityClassName;
string memberEntity = entityClassName;
string localEntity = entityClassName.ToLower();

   string actionClassName = crud + entityClassName + actionType + "Action"; 
   string effectClassName = crud + entityClassName + actionType + "Effect"; 

            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write("using System;\nusing System.Threading.Tasks;\nusing Fluxor;\nusing Lazorm;\nusing ");
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( namespaceText ));
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(".Store.Features.");
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write("UseCase.Actions.");
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( crud ));
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(";\n\nnamespace ");
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( namespaceText ));
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write(".Store.Features.");
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassNamePlural ));
            
            #line default
            #line hidden
            
            #line 26 ""
            this.Write(".Effects\n{\n    public partial class ");
            
            #line default
            #line hidden
            
            #line 28 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( effectClassName ));
            
            #line default
            #line hidden
            
            #line 28 ""
            this.Write(": Effect<");
            
            #line default
            #line hidden
            
            #line 28 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( actionClassName ));
            
            #line default
            #line hidden
            
            #line 28 ""
            this.Write(">\n    {\n        private readonly ILogger<");
            
            #line default
            #line hidden
            
            #line 30 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( effectClassName ));
            
            #line default
            #line hidden
            
            #line 30 ""
            this.Write("> _logger;\n\n        public ");
            
            #line default
            #line hidden
            
            #line 32 ""
            this.Write(this.ToStringHelper.ToStringWithCulture(
 effectClassName ));
            
            #line default
            #line hidden
            
            #line 33 ""
            this.Write("(ILogger<");
            
            #line default
            #line hidden
            
            #line 33 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( effectClassName ));
            
            #line default
            #line hidden
            
            #line 33 ""
            this.Write("> logger) =>\n            _logger = logger;\n\n        public override async Task Ha" +
                    "ndleAsync(");
            
            #line default
            #line hidden
            
            #line 36 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( actionClassName ));
            
            #line default
            #line hidden
            
            #line 36 ""
            this.Write(" action, IDispatcher dispatcher)\n        {\n");
            
            #line default
            #line hidden
            
            #line 38 ""
 if (actionType == "") { 
            
            #line default
            #line hidden
            
            #line 39 ""
 if (crud == "Load" ) { 
            
            #line default
            #line hidden
            
            #line 40 ""
            this.Write("            try\n            {\n                _logger.LogInformation($\"Loading ");
            
            #line default
            #line hidden
            
            #line 42 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 42 ""
            this.Write(" {action.");
            
            #line default
            #line hidden
            
            #line 42 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 42 ""
            this.Write(".Id}...\");\n                \n                // TODO: should change Id to array of" +
                    " key columns(refer to column def)\n                var ");
            
            #line default
            #line hidden
            
            #line 45 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( localEntity ));
            
            #line default
            #line hidden
            
            #line 45 ""
            this.Write("Response = await ");
            
            #line default
            #line hidden
            
            #line 45 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 45 ""
            this.Write(".GetAsync(action.");
            
            #line default
            #line hidden
            
            #line 45 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 45 ""
            this.Write(".Id);\n\n                //_logger.LogDebug<");
            
            #line default
            #line hidden
            
            #line 47 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 47 ""
            this.Write("> (");
            
            #line default
            #line hidden
            
            #line 47 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( localEntity ));
            
            #line default
            #line hidden
            
            #line 47 ""
            this.Write("Response);\n                dispatcher.Dispatch(new Load");
            
            #line default
            #line hidden
            
            #line 48 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 48 ""
            this.Write("SuccessAction(");
            
            #line default
            #line hidden
            
            #line 48 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( localEntity ));
            
            #line default
            #line hidden
            
            #line 48 ""
            this.Write("Response));\n                _logger.LogInformation($\"");
            
            #line default
            #line hidden
            
            #line 49 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 49 ""
            this.Write(" {action.");
            
            #line default
            #line hidden
            
            #line 49 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 49 ""
            this.Write(".Id} loaded successfully!\");\n            }\n            catch (Exception e)\n      " +
                    "      {\n                _logger.LogError($\"Error loading ");
            
            #line default
            #line hidden
            
            #line 53 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 53 ""
            this.Write(" {action.");
            
            #line default
            #line hidden
            
            #line 53 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 53 ""
            this.Write(".Id}, reason: {e.Message}\");\n                dispatcher.Dispatch(new Load");
            
            #line default
            #line hidden
            
            #line 54 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 54 ""
            this.Write("FailureAction(e.Message));\n            }                \n");
            
            #line default
            #line hidden
            
            #line 56 ""

    } /* end Load */
    else if (crud == "Create") {

            
            #line default
            #line hidden
            
            #line 60 ""
            this.Write("           try\n            {\n                _logger.LogInformation($\"Creating ");
            
            #line default
            #line hidden
            
            #line 62 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 62 ""
            this.Write(" {action.");
            
            #line default
            #line hidden
            
            #line 62 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 62 ""
            this.Write("}...\");\n                //_logger.LogDebug<");
            
            #line default
            #line hidden
            
            #line 63 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 63 ""
            this.Write("> (action.");
            
            #line default
            #line hidden
            
            #line 63 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 63 ""
            this.Write(");\n                var createdEntity =  await action.");
            
            #line default
            #line hidden
            
            #line 64 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 64 ""
            this.Write(".StoreAsync();\n\n                _logger.LogInformation(\"");
            
            #line default
            #line hidden
            
            #line 66 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 66 ""
            this.Write(" created successfully!\");\n                dispatcher.Dispatch(new Create");
            
            #line default
            #line hidden
            
            #line 67 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 67 ""
            this.Write("SuccessAction(action.");
            
            #line default
            #line hidden
            
            #line 67 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 67 ""
            this.Write("));\n            }\n            catch (Exception e)\n            {\n                _" +
                    "logger.LogError($\"Could not create ");
            
            #line default
            #line hidden
            
            #line 71 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 71 ""
            this.Write(", reason: {e.Message}\");\n                dispatcher.Dispatch(new Create");
            
            #line default
            #line hidden
            
            #line 72 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 72 ""
            this.Write("FailureAction(e.Message));\n            }\n");
            
            #line default
            #line hidden
            
            #line 74 ""

    }  /* end Create */
    else if (crud == "Update" ) {

            
            #line default
            #line hidden
            
            #line 78 ""
            this.Write("            try\n            {\n                _logger.LogInformation($\"Updating ");
            
            #line default
            #line hidden
            
            #line 80 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 80 ""
            this.Write(" {action.");
            
            #line default
            #line hidden
            
            #line 80 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 80 ""
            this.Write(".Id}...\");\n                //_logger.LogDebug<");
            
            #line default
            #line hidden
            
            #line 81 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 81 ""
            this.Write("> (action.");
            
            #line default
            #line hidden
            
            #line 81 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 81 ""
            this.Write(");\n                var updatedEntity = await action.");
            
            #line default
            #line hidden
            
            #line 82 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 82 ""
            this.Write(".StoreAsync();\n               \n                dispatcher.Dispatch(new ");
            
            #line default
            #line hidden
            
            #line 84 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( crud ));
            
            #line default
            #line hidden
            
            #line 84 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 84 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( actionType ));
            
            #line default
            #line hidden
            
            #line 84 ""
            this.Write("SuccessAction(updatedEntity));\n            }\n            catch (Exception e)\n    " +
                    "        {\n                _logger.LogError($\"Could not update ");
            
            #line default
            #line hidden
            
            #line 88 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 88 ""
            this.Write(" {action.");
            
            #line default
            #line hidden
            
            #line 88 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 88 ""
            this.Write(".Id}, reason: {e.Message}\");\n                dispatcher.Dispatch(new ");
            
            #line default
            #line hidden
            
            #line 89 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( crud ));
            
            #line default
            #line hidden
            
            #line 89 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 89 ""
            this.Write("FailureAction(e.Message));\n            }\n");
            
            #line default
            #line hidden
            
            #line 91 ""

    }  /* end Update */
    else if (crud == "Delete" )  {

            
            #line default
            #line hidden
            
            #line 95 ""
            this.Write("            try\n            {\n                _logger.LogInformation($\"Deleting ");
            
            #line default
            #line hidden
            
            #line 97 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 97 ""
            this.Write(" {action.");
            
            #line default
            #line hidden
            
            #line 97 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 97 ""
            this.Write(".Id}...\");\n                //_logger.LogDebug<");
            
            #line default
            #line hidden
            
            #line 98 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 98 ""
            this.Write("> (action.");
            
            #line default
            #line hidden
            
            #line 98 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 98 ""
            this.Write(");\n                var droppedEntity = await action.");
            
            #line default
            #line hidden
            
            #line 99 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 99 ""
            this.Write(".DropAsync();\n               \n                dispatcher.Dispatch(new ");
            
            #line default
            #line hidden
            
            #line 101 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( crud ));
            
            #line default
            #line hidden
            
            #line 101 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 101 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( actionType ));
            
            #line default
            #line hidden
            
            #line 101 ""
            this.Write("SuccessAction(droppedEntity));\n            }\n            catch (Exception e)\n    " +
                    "        {\n                _logger.LogError($\"Could not delete ");
            
            #line default
            #line hidden
            
            #line 105 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 105 ""
            this.Write(" {action.");
            
            #line default
            #line hidden
            
            #line 105 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 105 ""
            this.Write(".Id}, reason: {e.Message}\");\n                dispatcher.Dispatch(new ");
            
            #line default
            #line hidden
            
            #line 106 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( crud ));
            
            #line default
            #line hidden
            
            #line 106 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 106 ""
            this.Write("FailureAction(e.Message));\n            }\n");
            
            #line default
            #line hidden
            
            #line 108 ""
 
    } /* end else */ 
 } /* end actionype */ 
 else if (actionType == "Success") { 

            
            #line default
            #line hidden
            
            #line 113 ""
            this.Write("\n            _logger.LogInformation(\"");
            
            #line default
            #line hidden
            
            #line 114 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( crud ));
            
            #line default
            #line hidden
            
            #line 114 ""
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 114 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 114 ""
            this.Write(" successfully, navigating back to ");
            
            #line default
            #line hidden
            
            #line 114 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 114 ""
            this.Write(" listing...\");\n            //_logger.LogDebug<");
            
            #line default
            #line hidden
            
            #line 115 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 115 ""
            this.Write("> (action.");
            
            #line default
            #line hidden
            
            #line 115 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( entityClassName ));
            
            #line default
            #line hidden
            
            #line 115 ""
            this.Write(");\n        \n            /*\n                Write code for navigating back here\n  " +
                    "          */\n            await Task.Run(() => {}); \n\n            return;\n");
            
            #line default
            #line hidden
            
            #line 123 ""
 } else { 
            
            #line default
            #line hidden
            
            #line 124 ""
            this.Write("            await Task.Run(() => {}); \n\n            return;\n\n");
            
            #line default
            #line hidden
            
            #line 128 ""
 } /* end if */ 
            
            #line default
            #line hidden
            
            #line 129 ""
            this.Write(" \n        }\n    }\n}\n");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public virtual void Initialize() {
        }
    }
    
    public class EffectTemplateBase {
        
        private global::System.Text.StringBuilder builder;
        
        private global::System.Collections.Generic.IDictionary<string, object> session;
        
        private global::System.CodeDom.Compiler.CompilerErrorCollection errors;
        
        private string currentIndent = string.Empty;
        
        private global::System.Collections.Generic.Stack<int> indents;
        
        private ToStringInstanceHelper _toStringHelper = new ToStringInstanceHelper();
        
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session {
            get {
                return this.session;
            }
            set {
                this.session = value;
            }
        }
        
        public global::System.Text.StringBuilder GenerationEnvironment {
            get {
                if ((this.builder == null)) {
                    this.builder = new global::System.Text.StringBuilder();
                }
                return this.builder;
            }
            set {
                this.builder = value;
            }
        }
        
        protected global::System.CodeDom.Compiler.CompilerErrorCollection Errors {
            get {
                if ((this.errors == null)) {
                    this.errors = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errors;
            }
        }
        
        public string CurrentIndent {
            get {
                return this.currentIndent;
            }
        }
        
        private global::System.Collections.Generic.Stack<int> Indents {
            get {
                if ((this.indents == null)) {
                    this.indents = new global::System.Collections.Generic.Stack<int>();
                }
                return this.indents;
            }
        }
        
        public ToStringInstanceHelper ToStringHelper {
            get {
                return this._toStringHelper;
            }
        }
        
        public void Error(string message) {
            this.Errors.Add(new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message));
        }
        
        public void Warning(string message) {
            global::System.CodeDom.Compiler.CompilerError val = new global::System.CodeDom.Compiler.CompilerError(null, -1, -1, null, message);
            val.IsWarning = true;
            this.Errors.Add(val);
        }
        
        public string PopIndent() {
            if ((this.Indents.Count == 0)) {
                return string.Empty;
            }
            int lastPos = (this.currentIndent.Length - this.Indents.Pop());
            string last = this.currentIndent.Substring(lastPos);
            this.currentIndent = this.currentIndent.Substring(0, lastPos);
            return last;
        }
        
        public void PushIndent(string indent) {
            this.Indents.Push(indent.Length);
            this.currentIndent = (this.currentIndent + indent);
        }
        
        public void ClearIndent() {
            this.currentIndent = string.Empty;
            this.Indents.Clear();
        }
        
        public void Write(string textToAppend) {
            this.GenerationEnvironment.Append(textToAppend);
        }
        
        public void Write(string format, params object[] args) {
            this.GenerationEnvironment.AppendFormat(format, args);
        }
        
        public void WriteLine(string textToAppend) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendLine(textToAppend);
        }
        
        public void WriteLine(string format, params object[] args) {
            this.GenerationEnvironment.Append(this.currentIndent);
            this.GenerationEnvironment.AppendFormat(format, args);
            this.GenerationEnvironment.AppendLine();
        }
        
        public class ToStringInstanceHelper {
            
            private global::System.IFormatProvider formatProvider = global::System.Globalization.CultureInfo.InvariantCulture;
            
            public global::System.IFormatProvider FormatProvider {
                get {
                    return this.formatProvider;
                }
                set {
                    if ((value != null)) {
                        this.formatProvider = value;
                    }
                }
            }
            
            public string ToStringWithCulture(object objectToConvert) {
                if ((objectToConvert == null)) {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                global::System.Type type = objectToConvert.GetType();
                global::System.Type iConvertibleType = typeof(global::System.IConvertible);
                if (iConvertibleType.IsAssignableFrom(type)) {
                    return ((global::System.IConvertible)(objectToConvert)).ToString(this.formatProvider);
                }
                global::System.Reflection.MethodInfo methInfo = type.GetMethod("ToString", new global::System.Type[] {
                            iConvertibleType});
                if ((methInfo != null)) {
                    return ((string)(methInfo.Invoke(objectToConvert, new object[] {
                                this.formatProvider})));
                }
                return objectToConvert.ToString();
            }
        }
    }
}
